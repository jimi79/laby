roadmap

/ switch to numpy
/ move light_level to the rendering thing, or apart. not in the print part, so i can play with light_level afterward
/ render light even if outside -> don't assume light is at the center of the matrice. still take account of walls. update light only if relevant. to test, render assuming player is always in 5/5. moving should change the point of view (won't be easy to move)
/ try with fixed source light in 5,5
/ try using RGB instead of fixed thing. work with that level thing
that is useful to be able to mix the blue outside light with the red torch light.
means the light layer is now colored, and the mix can't be max. actually, a layer now is a set of rgb for each cell. and two layer added is the max for each channel.
/ try summing RGB...
meaning working with layer of light, for which then we add a color. like level is from 1 to 6 (we lose a lot of values here). maybe we can use gray nuance from 1 to 6, then if >7, we apply rgb
if red:it's 5*6^2 for level 5
if blue:it's 5*6^1 for level 5
sum
and display outcome

goal : have a glowing exit in blue...

/ move laby to a server that would work on a unix socket first (or tcp if not possible)
check flask actually, and a rest server maybe, somethg like that.
/ make it possible to be on a tcp/ip socket
/ for single player, if no server coordinate is entered in command line (no --ip --port), then use the lib without the layer.
create some sort of abstraction level, so if there is a server or not, it's the same command
/ try to connect two clients to see what happens
/ server has to store the coordinates of the player somehow. could be stored per client connection
like client a request a render assuming it's in 5,5
	server store 5,5 as a player, for the client a
b request a render assuming it's in 10,12 
	server store 10,12 as a player, for the client b
	render include the light from 5,5 (if that is useful, meaning we have to calculate distance from 5,5)
a request render for 5,6
	server update 5,6 for client a. so server knows there is one player in 5,6, and another one in 10,12
	and render include 10,12 if relevant
/ all player should reach exit. so now, the test to find out if someone win is asking the server if everybody is at the exit
